<?xml version="1.0" encoding="utf-8"?>
<Canvas>
	<Panel id="ship_view" layout="vertical" anchorMin="0,0" anchorMax="0.2,1" content="preferredFit,minFit" padding="2,2,2,2">
		<Action event="OnCreate">
			function (UI, verse) 
				this = UI["ship_view"] 
				switchParam = function() 
					this.SetParameters({ verse.ActiveShip() })
				end
				verse.AddAction("OnActiveShipChanged", switchParam)
			end
		</Action>
		<Argument>@ship</Argument>
		<Label alignment="MiddleCenter" minSize="-1,20"><Text type="dynamic" argument="ship">Name</Text></Label>
		<Panel id="ship_details" layout="grid" gridY="2" cellSize="100,20" content="minFit">
			<Label><Text>Health</Text></Label>
			<Label><Text type="dynamic" argument="ship">Health</Text></Label>
			<Label><Text>Energy</Text></Label>
			<Label>
				<!-- Put LUA Functionality -->
				<Value argument="ship">Energy</Value>
				<Value argument="ship">Health</Value>
				<Text type="function">
					function (Energy, Health)
						return Energy .. " erg"
					end
				</Text>
			</Label>
			<Label><Text>Name</Text></Label>
			<Label><Text type="dynamic" argument="ship">Name</Text></Label>
			<Label><Text>Health</Text></Label>
			<ProgressBar factor="1">
				<Value argument="ship">Health</Value>
				<Value argument="ship">MaxHealth</Value>
				<Sprite>None</Sprite>
				<Label type="fraction"/>
			</ProgressBar>
		</Panel>
	</Panel>
	
	<Panel id="part_view" layout="vertical" 
			anchorMin="0.8,0" anchorMax="1,1" 
			content="preferredFit,minFit" padding="2,2,2,2">
		<Argument>@part</Argument>
		<Label alignment="MiddleCenter" minSize="-1,20">
			<Text>Part Viewer</Text>
		</Label>
		<Panel id="part_details" layout="grid" gridY="2" cellSize="100,20" content="minFit">
			<Label><Text>Name</Text></Label>
			<Label><Text type="dynamic" argument="part">Name</Text></Label>
			<Label><Text>Position</Text></Label>
			<Label><Text type="dynamic" argument="part">Position</Text></Label>
			<Label><Text>Health</Text></Label>
			<Label><Text type="dynamic" argument="part">Health</Text></Label>
			<Label><Text>Energy Drain</Text></Label>
			<Label><Text type="dynamic" argument="part">energy_drain</Text></Label>
			<Label><Text>Pressure</Text></Label>
			<Label>
				<Value argument="part">pressure</Value>
				<Text type="formatted" argument="player">{0} mBa</Text>
			</Label>
			<Label><Text>Temperature</Text></Label>
			<Label>
				<Value argument="part">temperature</Value>
				<Text type="formatted" argument="player">{0} K</Text>
			</Label>
			<Label><Text>Level 0</Text></Label>
			<Panel id="upgrade" layout="horizontal" background="none" padding="2,2,2,2">
				<Button type="simple">
					<Value argument="part">Health</Value>
					<Sprite category="UI">minus</Sprite>
					<Alt>Reduce</Alt>
					<Action event="OnClick">
						function (verse)
							-- print(verse);
						end
					</Action> 
				</Button>
				<Label preferredSize="100,0"><Text>Label</Text></Label>
				<Button type="simple">
					<Sprite category="UI">plus</Sprite>
					<Alt>Increase</Alt>
					<Action event="OnClick">
						function (verse)
							-- print("plus");
						end
					</Action> 
				</Button>
			</Panel>
		</Panel>
	</Panel>
	
	
	<Panel id="player_panel" layout="horizontal" anchorMin="0,0.9" anchorMax="1,1" padding="4,2,2,2">
		<Argument>@player</Argument>
		<Label>
			<Value argument="player">Funds</Value>
			<Text type="formatted" argument="player">{0} $</Text>
		</Label>
	</Panel>
	
	<Panel id="creative_panel" layout="horizontal" anchorMin="0,0" anchorMax="1,0.1" padding="2,2,2,2">
		<Button type="simple">
			<Text>Spawn Projectile</Text>
			<Action event="OnClick">
				function ()
					verse = Verse.Instance
					coord = Coordinate.__new()
					targetShip = verse.GetShip(1)
					p = Projectile.__new()
					verse.ActiveShip().SpawnProjectile(p, coord, targetShip, coord)
				end
			</Action> 
		</Button>
		<Action event="OnCreate" type="script">buildCreativePlacementPanel</Action>
	</Panel>
	<Panel id="overlay_panel" layout="horizontal" anchorMin="0,0.1" anchorMax="1,0.2" padding="2,2,2,2">
		<Action event="OnCreate" type="script">buildOverlayPanel</Action>
	</Panel>
</Canvas>